version: 2.1
# define executors deduplicate config
executors:
  docker-publisher:
    environment:
      F_IMAGE_NAME: jncnjq/aspnetingress
      B_IMAGE_NAME: jncnjq/aspnetapp
    docker:
      - image: circleci/buildpack-deps:stretch

# define orbs(plugin)
orbs:
#  heroku: circleci/heroku@1.2.6
  windows: circleci/windows@2.4.1

# define jobs
jobs:
  build-artifact:
    description: Build application with Release configuration
    executor:
      name: windows/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-packages-v1-{{ checksum "SampleWebApiAspNetCore/SampleWebApiAspNetCore.csproj" }}
      - run:
          name: "Install project dependencies"
          command: dotnet.exe restore
      - run:
          name: "Build Application according to some given configuration"
          command: dotnet.exe build --configuration Release
      - run:
          name: Creating Artifacts
          command: |
              powershell Compress-Archive SampleWebApiAspNetCore\bin\Release\net5.0\ artifact-net5.0-rel-bin.zip
              ls
#             mkdir /tmp/artifacts;
#             cp . /tmp/artifacts;
#            echo "my artifact file" > /tmp/art-1;
#            mkdir /tmp/artifacts;
#            echo "my artifact files in a dir" > /tmp/artifacts/art-2;
      - store_artifacts:
          path: artifact-net5.0-rel-bin.zip
#          destination: net5.0-compile-app
#      - store_artifacts:
#          path: /tmp/artifacts/art-2
#          destanation: artifact-file1

  build-images:
    executor: docker-publisher
#    environment:
#      F_IMAGE_NAME: jncnjq/aspnetingress
#      B_IMAGE_NAME: jncnjq/aspnetapp
#    docker:
#      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Dockers images
          command: |
              ls
              cd SampleWebApiAspNetCore
              docker build -t $B_IMAGE_NAME:latest .
              cd ../nginx
              docker build -t $F_IMAGE_NAME:latest .
              docker image ls
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $F_IMAGE_NAME $B_IMAGE_NAME
# define persistant workspace cross jobs
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  upload-images:
    executor: docker-publisher
#    environment:
#      F_IMAGE_NAME: aspnetingress
#      B_IMAGE_NAME: aspnetapp
#    docker:
#      - image: circleci/buildpack-deps:stretch
    steps:
# attach workspace cross jobs
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker images
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker images
          command: |
            docker image ls
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $F_IMAGE_NAME:latest
            docker push $B_IMAGE_NAME:latest

  reload-docker:
    executor: docker-publisher
    steps:
      - run:
          name: Reload docker servise on docker host
          command: |
            ssh -o StrictHostKeyChecking=no admin@ec2-34-224-66-44.compute-1.amazonaws.com "ls"


workflows:
  version: 2
  build-master:
    jobs:
      - build-artifact:
          filters:
            branches:
              only: main
      - build-images:
          filters:
            branches:
              only: main
      - upload-images:
          requires:
            - build-images
          filters:
            branches:
              only: main
      - reload-docker:
          requires:
            - upload-images
          filters:
            branches:
              only: main