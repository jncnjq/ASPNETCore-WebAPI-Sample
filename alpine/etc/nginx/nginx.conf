user	nginx;
worker_processes	auto;
pid        /var/run/nginx.pid;
error_log  /var/log/nginx/error.log notice;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	root /usr/share/nginx/html;
	index index.html index.htm index.nginx-debian.html;
	server_name _;
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

}
server {
	root /usr/share/nginx/html;
	index index.html index.htm index.nginx-debian.html;
	server_name aspnetapp.ddns.net; # managed by Certbot
	location / {
		try_files $uri $uri/ =404;
	}
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aspnetapp.ddns.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aspnetapp.ddns.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = aspnetapp.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
	listen 80 ;
	listen [::]:80 ;
    server_name aspnetapp.ddns.net;
    return 404; # managed by Certbot
}
}
